/* ===============================================================
    HTML5 Boilerplate | Helper classes
=============================================================== */

/* Hide visually and from screen readers */
._hidden, [hidden] { display: none !important; }
    
/*
  * Hide only visually, but have it available for screen readers:
  * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
  *
  * 1. For long content, line feeds are not interpreted as spaces and small width
  *    causes content to wrap 1 word per line:
  *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
  */

._visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
  * Extends the .visually-hidden class to allow the element
  * to be focusable when navigated to via the keyboard:
  * https://www.drupal.org/node/897638
  */

._visually-hidden.focusable:active,
._visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/* Hide visually and from screen readers, but maintain layout */
._invisible { visibility: hidden; }

/*
  * Clearfix: contain floats
  *
  * The use of `table` rather than `block` is only necessary if using
  * `::before` to contain the top-margins of child elements.
  */

._clearfix::before,
._clearfix::after {
  content: "";
  display: table;
}

._clearfix::after {
  clear: both;
}

/* ===============================================================
    EXAMPLE Media Queries for Responsive Design.
    These examples override the primary ('mobile first') styles.
    Modify as content requires.
=============================================================== */

/* @media only screen and (min-width: 35em) { */
  /* Style adjustments for viewports that meet the condition */
/* } */