// ===============================================================
// Flex for Ace Core
// ===============================================================

// @media (min-width: 20rem){   /* ≥ 320px  Mobile S  ._f_ms_* */}
// @media (min-width: 23.4rem){ /* ≥ 375px  Mobile M  ._f_mm_* */}
// @media (min-width: 26.6rem){ /* ≥ 425px  Mobile L  ._f_ml_* */}
// @media (min-width: 35.5rem){ /* ≥ 568px            ._f_s_*  */}
// @media (min-width: 48rem){   /* ≥ 768px  Laptop S  ._f_m_*  */}
// @media (min-width: 60rem){   /* ≥ 960px  960gs     ._f_r_*  */}
// @media (min-width: 64rem){   /* ≥ 1024px Laptop M  ._f_l_*  */}
// @media (min-width: 80rem){   /* ≥ 1280px           ._f_2l_* */}
// @media (min-width: 90rem){   /* ≥ 1440px Laptop L  ._f_3l_* */}
// @media (min-width: 120rem){  /* ≥ 1920px           ._f_4l_* */}
// @media (min-width: 160rem){  /* ≥ 2560px 4K        ._f_4k_* */}
// @media (min-width: 240rem){  /* ≥ 3840px           ._f_5k_* */}

._flex {
  display: flex;
  flex-flow: row wrap;
  align-content: flex-start;
  margin: 0 auto;
}

// ._space_around { justify-content: space-around }
// ._space_evenly { justify-content: space-evenly }

// ._gaps
$gaps: (
  "_x5" : .5rem,
  ""     : 1rem,
  "_1x5" : 1.5rem,
  "_2"   : 2rem
);
@each $x, $value in $gaps {
  ._gap#{$x},
  ._gap_h#{$x} { column-gap: $value; }
  ._gap_v#{$x} { row-gap: $value; }
  ._gap_a#{$x} { gap: $value; }
}

// 1,3,5,7
// 2,4,6,8
// 10,12,14,16

$g: 12;
@for $i from 1 through $g - 1 {
  // $width: calc($i / $g);
  ._f_#{$g}_#{$i} { flex: $i $i calc($i / $g  * 30em); }
}

// $g: 10;
// @for $i from 1 through $g - 1 {
//   @if ( $g == 10 and $i == 5 ){ ._f_#{$g}_#{$i} { @extend ._f_12_6; } }
//   @else { ._f_#{$g}_#{$i} { flex: $i 1 calc($i * 30 / $g * 1rem); } }
// }

// $g:8;
// ._f_#{$g}   { @extend ._fill; }
// ._f_#{$g}_2 { @extend ._f_12_3; }
// ._f_#{$g}_4 { @extend ._f_12_6; }
// @for $i from 1 through $g {
//   @if( $i != $g and $i != 4 and $i != 2 ){
//     ._f_#{$g}_#{$i} { @extend ._fill; width: calc(100% / $g * $i) }
//   }
// }

// $g: 6;
// @for $i from 1 through $g - 1 {
//   ._f_#{$g}_#{$i} { @extend ._f_#{$g * 2}_#{$i * 2}; }
// }

._f_2_1 { @extend ._f_12_6; }

$gbase: 12;

$gaps: (4, 3, 2);
$factors: (3, 4, 6);

@each $g, $f in ($gaps, $factors) {
  @for $i from 1 through $g - 1 {
    ._f_#{$g}_#{$i} { @extend ._f_#{$gbase}_#{$i * $f}; }
  }
}

._f { display: inline-block; box-sizing: border-box; flex: 1 }

// 1. force full width.
// 2. fill available width.
._full  { @extend ._f; flex: $gbase 0 100%; } /* 1 */
._fill  { @extend ._f; flex: $gbase 1 0; } /* 2 */

// ======================================================== EOF */
