extends ../components/_test

block append vars
  - filename = 'index.html'
  - heading  = 'Json'
  - about    = 'Loading json data at runtime.'

  - root = '/ace/json/'
  -
    let navlinks = [
      [root,'Reset'],
    ];

block topRightNav_content
  +topThemeSwitch
  +topHomeButton(componentsUri)

block navbar
  +nav#_navbar._color_1._no_print
    div(style="margin: .6rem"): +navmenu(navlinks)

block article
  article._article

    section
      details()
        summary._color_1._pa_x5r: ._inblock#path._small: div._i._tc_orange| Select path
        div: ul._m0._small(style="padding-left:1.8em")
          -
            let links = [
              [root+'localhost/3','localhost/3'],
              [root+'localhost/ace/assets/js/menumakan/settings.json','menumakan/settings.json'],
              [root+'localhost/ace/assets/js/menumakan/menuItems.json','menumakan/menuItems.json'],
              [root+'api.sheety.co/phill/cluckerRestaurant/menuItems?protocol=https','cluckerRestaurant/menuItems'],
            ];
          each v in links
            li: +a._link._l(href=v[0]) #{v[1]}

    hr

    section: +pre#json._small

  //- article
//- block article

block append script
  script.
    (()=>{

      const
        w = window,
        d = document,
        eid = (id)=>document.getElementById(id),
        pathPre = eid('path');

      function renderJson(url){
        const
          jsonPre = eid('json');

        jsonPre.innerHTML = 'Loading ...'

        fetchJson(url)
        .then((json)=>{
          jsonPre.innerHTML = JSON.stringify(json);
        })
        .catch(error => {
          console.error("Fetch error:", error.message); // Handle errors here
          jsonPre.innerHTML = `<div class="_i _tc_orange">Invalid path, no data returned by : ${url}</div>`;
        });
      }

      function fetchJson(url) {
        return fetch(url).then((response)=>response.json())
      }

      const
        aceJson = '/ace/json/',
        urlParams = new URLSearchParams(w.location.search),
        protocol = urlParams.get('protocol') || 'http';
      var
        path = w.location.pathname;

      if(path.substring(0,aceJson.length)==aceJson){ path = path.substring(aceJson.length) }

      if(path && path.length > 0){
        path = protocol+'://'+path;
        pathPre.innerHTML = path;
        renderJson(path);
      }

    })();
  //- script.