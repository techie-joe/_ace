extends _html

block append vars
  - filename = 'overflow.html'
  - heading  = 'Overflow'
  - about    = 'Several overflow use cases.'

  -
    svgi = {
      compare:'M19,3H14V5H19V18L14,12V21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M10,18H5L10,12M10,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H10V23H12V1H10V3Z',
      bars:'M5,6H19V8H5V6M5,11H19V13H5V11M5,16H19V18H5V16Z',
      home:'M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z',
      ellipsis:'M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z',
      download:'M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z',
      image:'M21,3H3C2,3 1,4 1,5V19A2,2 0 0,0 3,21H21C22,21 23,20 23,19V5C23,4 22,3 21,3M5,17L8.5,12.5L11,15.5L14.5,11L19,17H5Z',
    };

block append style
  style.

    .oo {
      display:inline-block;
      width:12rem;
    }
    .o {
      display:inline-block;
      width:12rem;
      height:12rem;
      margin:0 .5rem .5rem 0;
      vertical-align:top;
    }
    .top {
      position:absolute;
      top:0;left:0;
    }
    .t { font-size:.8em;margin:.4em }
    .s { font-size:.8em;margin:0 .4em }
    .p { font-size:.8em;padding:.4em;line-height:1 }
    .a {
      display:inline-block;
      padding:.6rem;
    }
    .b {
      display:inline-block;
      outline: 1px solid tomato;
      color:tomato !important;
      text-decoration:none !important;
      text-align:center;
      font-size:.8em;
      padding:.2em .4em;
    }
    ._clip_end {
      white-space: nowrap;
      overflow: hidden;
    }
    ._ellipsis {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    ._mask {
      white-space: nowrap;
      mask: linear-gradient(to left, transparent 0%, black 20%);
    }
    ._mask_2 {
      white-space: nowrap;
      mask: linear-gradient(to left, transparent 0%, black 20%, black 80%, transparent 100%);
    }
    ._clip_shape {
      width: 100%;
      clip-path: circle(50% at 50% 50%);
    }
    ._snap { scroll-snap-type: x mandatory }
    ._snap ._snap-item { scroll-snap-align: center }

    /* -------------------------------------------------------- */

    ._hover_show { display:block;margin:1px }
    ._hover_show.__active ._trigger,
    ._hover_show ._trigger {
      cursor:pointer;
      transition: background-color .2s;
    }
    ._hover_show ._item { position:relative }
    ._hover_show.__absolute ._content { position:absolute }
    ._hover_show ._content {
      overflow:hidden;
      transition:max-height .2s ease .4s;
      max-height:0px;
    }
    ._hover_show.__active ._trigger,
    ._hover_show:hover ._trigger { background-color:#8883 }
    ._hover_show.__active ._content,
    ._hover_show:hover ._content { max-height:100px }

    ._a a._hover_show:visited,
    ._a a._hover_show:hover,
    ._a a._hover_show { color:inherit;text-decoration:none }

  //- style.
  +css('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css')
  style.

    .btn { border:0 }
    .flatmenu ._nav_layout { margin:.5rem 0 }
    .flatmenu .btn { border-radius:0;margin:0;vertical-align:top;line-height:2 }
    .flatmenu .btn.__icon { padding:0 .5em; font-size:1.25em }
    .flatmenu ._btnlink ._fa { margin-right:0 }

    .flatmenu ._hover_show__on_focus,
    .flatmenu ._hover_show {
      display:inline-block;
      margin:0;
    }

    #mainmenu {
      margin:-.5rem 0 .5rem;
      overflow:hidden;width:0;max-height:0px;
      transition:width .2s ease, max-height .2s ease;
    }
    #mainmenu.open { width:100%;max-height:100px; }

  //- style.

mixin item(top)
  .a&attributes(attributes)
    a(href=top).b Click Me

mixin menu_sample
  -
    temp = [
      ['','About'],
      ['','Services'],
      ['','Gallery'],
      ['','Contact'],
    ];
  each v in temp
    +a._btnlink._l.btn(href=v[0] onclick=onclick()) #{v[1]}

mixin m2
  #m2._hover_show.__absolute
    +a._trigger._btnlink._l.btn.__absolute(href='#' onclick=onclick()) Menu #[+fas.fa-caret-down]
    ._item: ._content._color_1(style="width:300px;"): ._pa: .s
      | // more menues ...
    //- 
  //-

mixin mainmenu
  #mainmenu: ._color._pa(style="background-color:#0002;height:400px")
    ._small| // main menu goes here

block append script
  script.
    var mainMenuIs = 'closed';
    function toggleMainMenu(){
      mainMenuIs = mainMenuIs=='closed'?'open':'closed';
      var e = document.getElementById('mainmenu');
      if(e){ e.className = mainMenuIs }
    }
  //- script.

block article
  artcile._article

    section

      +nav._color_1.flatmenu
        a(onclick=onclick('toggleMainMenu();'))._btnlink._l.btn.__icon: +isvg(svgi.bars)
        +m2
        +a._btnlink._l.btn.__icon: +isvg(svgi.ellipsis)
        //- +menu_sample
        //- +a._btnlink._l.btn.__icon: +isvg(svgi.compare)
        //- +a._btnlink._l.btn.__icon: +isvg(svgi.home)
        //- +a._btnlink._l.btn.__icon: +isvg(svgi.download)
        //- +a._btnlink._l.btn.__icon: +isvg(svgi.image)
      +mainmenu

    hr
    div
      a._btnlink(href='' style="padding:.2rem .4rem") Reset
    hr

    section._mv

      .o._outline
        .t
          | To reveal more on hover,#[br]
          | use #[span._mono ._hover_show].
        +a._hover_show.__absolute
          ._trigger.p| The absolute type,
          ._item: ._content._color_1: .p
            +repeat(6)| way too long .. 
        .s| would overlay above others.
        .t: +_
        +a._hover_show
          ._trigger.p| The default type,
          ._item: ._content._color_1: .p
            +repeat(6)| way too long .. 
        .s| would shove other content.

      .o._outline
        .t
          | To clip in a certain shape,#[br]
          | use #[span._mono ._clip]
        .t._clip_shape._color_1: +repeat(15)| way too long ..

      .o._outline._relative._scrollable
        #t1.top
        .t| When #[a(href="#i1") the item] is #[br] out off the view,
        .t| use #[span._mono ._scrollable].
        +item('#t1')#i1(style="position:absolute;bottom:-50%;right:-50%;")

      .o._outline

        .t._clip_end
          | To cut-off the rest of the text without any indication,
        .t| use #[span._mono ._clipend].

        .t._ellipsis
          | To add dots at the end of the line like this,
        .t| use #[span._mono ._ellipsis].

        .t._tc_red| Only works for a single line.

      .o._outline

        .t._mask
          | To mask the end of the line with some gradient,
        .t| use #[span._mono ._mask].

        .t._mask_2
          | To mask the both ends of the line with some gradient,
        .t| use #[span._mono ._mask_2].

        .t._tc_red| Only works for a single line.

    //- section

  //- article

//- block article
